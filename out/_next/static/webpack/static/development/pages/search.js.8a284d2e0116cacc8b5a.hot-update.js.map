{"version":3,"file":"static/webpack/static/development/pages/search.js.8a284d2e0116cacc8b5a.hot-update.js","sources":["webpack:///./components/SearchTags.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Title from './SearchTitle'\n\nimport { WithContext as ReactTags } from 'react-tag-input';\n\nconst KeyCodes = {\n  comma: 188,\n  enter: 13,\n};\n \nconst delimiters = [KeyCodes.comma, KeyCodes.enter];\n\nclass SearchTags extends Component {\n  \n  constructor(props) {\n        super(props);\n \n        this.state = {\n            tags: [\n                { id: \"Thailand\", text: \"Thailand\" },\n                { id: \"India\", text: \"India\" }\n             ]\n        };\n        this.handleDelete = this.handleDelete.bind(this);\n        this.handleAddition = this.handleAddition.bind(this);\n        this.handleDrag = this.handleDrag.bind(this);\n    }\n\n    handleDelete(i) {\n        const { tags } = this.state;\n        this.setState({\n         tags: tags.filter((tag, index) => index !== i),\n        });\n    }\n \n    handleAddition(tag) {\n        this.setState(state => ({ tags: [...state.tags, tag] }));\n        console.log(this.state.tags)\n        \n        const ReactTags__selected = document.querySelectorAll(\".ReactTags__selected\")\n\n        if(ReactTags__selected.hasChildNodes()) {\n\n          let clear = document.getElementById(\"clearTag\")\n          clear.classList.add('active')\n        }\n    \n    }\n \n    handleDrag(tag, currPos, newPos) {\n        const tags = [...this.state.tags];\n        const newTags = tags.slice();\n \n        newTags.splice(currPos, 1);\n        newTags.splice(newPos, 0, tag);\n \n        // re-render\n        this.setState({ tags: newTags });\n    }\n\n    handleTagMenu = (e) => {\n      const material = document.getElementById(\"SearchTags-input\")\n      material.classList.toggle(\"active\")\n    }\n\n    handleClear = e => {\n\n      this.setState({\n        tags: []\n      })\n\n      const clear = document.getElementById(\"clearTag\")\n      clear.classList.add('active')\n\n\n    }\n\n  render() {\n\n    const { tags, suggestions } = this.state;\n\n  return (\n    <div className=\"SearchTags\">\n        <Title title=\"Tags\"></Title>\n\n        <div onClick={this.handleTagMenu} className=\"searchTagMenu\">\n          <img src=\"/static/img/arrowUp.svg\" alt=\"\"/>\n        </div>\n\n          <div className=\"SearchTags-input\" id=\"SearchTags-input\">\n            <ReactTags\n              tags={tags}\n              suggestions={suggestions}\n              handleDelete={this.handleDelete}\n              handleAddition={this.handleAddition}\n              handleDrag={this.handleDrag}\n              delimiters={delimiters} \n              placeholder=\"Search Tag\"/>\n          </div>\n\n          <span className=\"clearTag\" id=\"clearTag\" onClick={this.handleClear}><i>X </i> Clear selection </span>\n\n\n          <style>{`\n            .SearchTags {\n              background: white;\n              padding: 10px;\n              box-sizing: border-box;\n              font-family: sans-serif;\n              border-radius: 5px;\n              margin-bottom: 10px;\n              position: relative;\n              text-align: center;\n            }\n\n            .SearchTags-input {\n              position: relative;\n              display: none;\n            }\n            .SearchTags-input.active {\n              display: block;\n            }\n\n            .searchTagMenu {\n              position: absolute;\n              top: 23px;\n              right: 20px;\n              cursor: pointer;\n            }\n\n            .searchTagMenu img {\n              width: 15px;\n            }\n\n            .searchTagMenu {\n              position: absolute;\n              top: 23px;\n              right: 20px;\n              cursor: pointer;\n            }\n\n            .SearchTags-input .ReactTags__tagInput{\n              position: absolute;\n              top: -45px;\n              left: 20px;\n              width: 80%;\n              margin: auto;\n            }\n\n            .SearchTags-input .ReactTags__tagInput input{\n              width: 100%;\n              height: 30px;\n              box-sizing: border-box;\n              padding-left: 10px;\n              border: 1px solid #80808038;\n              border-radius: 4px;\n            }\n\n            .SearchTags-input .ReactTags__remove {\n              margin-left: 10px;\n            }\n\n            .ReactTags__selected {\n              margin-top: 70px;\n              text-align: left;\n              padding-left: 17px;\n            }\n\n            .tag-wrapper {\n              background: #1c2d4c;\n              margin: 5px;\n              color: #ff8f17;\n              padding: 5px 10px;\n              font-size: 15px;\n              border-radius: 4px !important;\n              display: inline-block;\n              \n            }\n\n            .clearTag {\n              margin-top: 20px;\n              display: none;\n              text-align: center;\n              cursor: pointer;\n            }\n\n            .clearTag.active {\n              display: block;\n            }\n          `}</style>\n\n\n    </div>\n  );\n  }\n}\n\nexport default SearchTags;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA+CA;AACA;AACA;AACA;AAlDA;AAqDA;AACA;AADA;AACA;AAGA;AACA;AAGA;AACA;AA3DA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AAXA;AAYA;AACA;;;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AADA;AAGA;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;;;AAmBA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2FA;;;;AAtLA;AACA;AAwLA;;;;A","sourceRoot":""}